@using System.Text.RegularExpressions;
@using System.Security.Cryptography;
@functions{
    public static string CreateSHAHash(string Password, string Salt)
    {
        SHA512Managed HashTool = new SHA512Managed();
        Byte[] PasswordAsByte = System.Text.Encoding.UTF8.GetBytes(string.Concat(Password, Salt));
        Byte[] EncryptedBytes = HashTool.ComputeHash(PasswordAsByte);
        HashTool.Clear();
        return BitConverter.ToString(EncryptedBytes).Replace("-", "");
    }
}

@{
    string u = Request.ServerVariables["HTTP_USER_AGENT"];
    Regex b = new Regex(@"(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino", RegexOptions.IgnoreCase | RegexOptions.Multiline);
    Regex v = new Regex(@"1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-", RegexOptions.IgnoreCase | RegexOptions.Multiline);
    
    var redirect = "~/login.cshtml";
    var pageTitle = "Manage user";

    var usernameInput = "";
    var passwordInput = "";
    var nameInput = "";
    var successMessage = "";
    var errorMessage =  "";
    bool isValidUsername =  false;

    var db = Database.Open("102547-concepttest");
    if (Session["id"] != null) {
        int userId = (int)(Session["id"]);
        var checkIfAdmin = db.QueryValue("SELECT COUNT(*) FROM T_Admin WHERE userid = @0", userId);
        if (checkIfAdmin != 0) {

            Validation.RequireField("username", "You must submit a username");
            Validation.RequireField("password", "You must submit a password");
            Validation.RequireField("name", "You must submit a name");

            if(IsPost && Validation.IsValid()) {
                usernameInput = Request.Form["username"];
                passwordInput = Request.Form["password"];
                nameInput = Request.Form["name"];
                if (db.QueryValue("SELECT count(*) FROM T_User WHERE username = @0", usernameInput) == 0) {
                    string pwhash = CreateSHAHash(CreateSHAHash(passwordInput, "hej"), usernameInput);
                    var insertCommand = "INSERT INTO T_User (username, password, name) VALUES(@0, @1, @2)";
                    db.Execute(insertCommand, usernameInput, pwhash, nameInput);
                    successMessage = "Successfully added " + usernameInput + " to database!";
                    isValidUsername = true;
                }
                else {
                    errorMessage = "Username already exist, please try another username.";
                }
            }
        }
        else {
            Response.Redirect(redirect);
        }
    }
    else {
        Response.Redirect(redirect);
    }
}

<!DOCTYPE html>

<html lang="en">
    <head>
        <meta charset="utf-8" />
        @if ((b.IsMatch(u) || v.IsMatch(u.Substring(0, 4)))) {
            <link rel="stylesheet" type="text/css" href="StyleSheetMobile.css">
            <script src="~/fontsizescript.js" type="text/javascript"></script>
        }
        else {
            <link rel="stylesheet" type="text/css" href="StyleSheet.css">
        }
        <title>@pageTitle</title>
    </head>
    <body onload="scaleWidth();" onresize="scaleWidth();">
        @_includes.dashboard()
        @{
            if(IsPost && Validation.IsValid() && isValidUsername) {
                <div>
                    <p>username: @usernameInput</p>
                    <p>password: @passwordInput</p>
                    <p>name: @nameInput</p>
                    <h2>@successMessage</h2>
                    <p><a href="manageuser.cshtml">Add another user</a></p>
                </div>
            }
            else {
                <form method="post">
                    <div>
                        <h1>Add user</h1>
                        <hr>
                        <table class="invisborder">
                            <tr>
                                <td align="right">Username:</td>
                                <td><input type="text" name="username" class="text" maxlength="30"></td>
                                <td>@Html.ValidationMessage("username") @errorMessage</td>
                            </tr>
                            <tr>
                                <td align="right">Password:</td>
                                <td><input type="password" name="password" class="text" maxlength="30"></td>
                                <td>@Html.ValidationMessage("password")</td>
                            </tr>
                            <tr>
                                <td align="right">Name:</td>
                                <td><input type="text" name="name" class="text" maxlength="30"></td>
                                <td>@Html.ValidationMessage("name")</td>
                            </tr>
                            <tr>
                                <td></td>
                                <td><input type="submit" value="Submit"></td>
                                <td></td>
                            </tr>
                        </table>
                            @{
                                if(IsPost && Request.Form["removeUser"] != null && Request.QueryString["type"] == "remove") {
                                    var removeUser = "DELETE FROM T_User WHERE T_User.id = @0";
                                    var username = Request.Form["removeUser"];
                                    try {
                                        db.Execute(removeUser, username);
                                        successMessage = "Successfully removed " + Request.Form["removeUser"] + " from database!";
                                    }
                                    catch (Exception e) {
                                        successMessage = "Error: " + e.ToString();
                                    }
                                }
                                var getUsers = db.Query("SELECT * FROM T_User WHERE T_User.id != @0 ORDER BY username", Session["id"]);
                                if(getUsers.Count() > 0) {
                                    <h1>Remove user</h1>
                                    <hr>
                                    <form method="post" action="?type=remove">
                                        @{
                                            foreach(var user in getUsers) {
                                                <p><input type="radio" name="removeUser" value="@user.id">@user.username - @user.name</p>
                                            }
                                        }
                                        <input type="submit" value="Remove">
                                    </form>
                                    <p>@successMessage</p>
                                }
                            }
                        <hr>
                        <p><a href="dashboard.cshtml">Back to dashboard</a></p>
                    </div>
                </form>
            }
        }
    </body>
</html>
