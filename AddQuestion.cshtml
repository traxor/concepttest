@{
    var Question = "";
    var Tags = "";
    var Answer = "";
    var course = "";
    var courseNameOutput = "";
    var lectureId = "";
    var lectureOutput = "";
    var successMessage = "";
    
    var selectcommand = "SELECT * FROM T_Lecture WHERE course_id = @0";
    var addcommand = "INSERT INTO T_Question (question, tags) Values (@0, @1)";
    var addrelation = "INSERT INTO T_Question_Lecture (question_id, lecture_id) Values (@0, @1)";
    var addanswer = "INSERT INTO T_Answer (question_id, answer, correct) Values (@0, @1, @2)";

    var db = Database.Open("102547-concepttest");
    var selected = db.Query("SELECT * FROM T_Course");
    
    if(IsPost && !Request["Submit"].IsEmpty())
    {
        Validation.RequireField("categoryId", "You must select a Course");
        Validation.RequireField("lectures", "You must select a Lecture");
        Validation.RequireField("Question", "You must submit a Question");
        lectureId = Request.Form["lectures"];
        lectureOutput = db.QueryValue("SELECT date FROM T_Lecture WHERE id = @0", lectureId);

        if(Validation.IsValid()) {
            Question = Request.Form["Question"];
            Tags = Request.Form["Tags"];
            db.Execute("START TRANSACTION");
            db.Execute(addcommand, Question, Tags);
            var id = db.GetLastInsertId();
            db.Execute(addrelation, id, lectureId);
            int count = Int16.Parse(Request.Form["counter"]);

            for(int k = 1; k <= count; k++) {
                Answer = Request.Form[k.ToString()];
                var correct = Request.Form[(k+10).ToString()];
                if(Answer != null && Answer != "") {
                    if(correct == "correct") {
                        db.Execute(addanswer, id, Answer, 1);
                    }
                    else {
                        db.Execute(addanswer, id, Answer, 0);
                    }
                }
            }
            db.Execute("COMMIT");
            successMessage = "Question successfully added to database!";
        }
    }  
}

<!DOCTYPE html>

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="stylesheet" type="text/css" href="StyleSheet.css">
        <script src="~/Script.js" type="text/javascript"></script>
        <title>Add Question</title>
    </head>

    <body>
        @{
            //After the page reloads and a course was selected the dropdownlist containing lectures is filled with the course variable

            course = Request.Form["categoryId"];
            var selectedlectures = db.Query(selectcommand, course);
            courseNameOutput = db.QueryValue("SELECT course_name FROM T_Course WHERE id = @0", course);

            if(IsPost && !Request["Submit"].IsEmpty() && Validation.IsValid()) {
                <div>
                    <p>Course: @courseNameOutput</p>
                    <p>Lecture: @lectureOutput</p>
                    <p>Question: @Question</p>
                    <h2>@successMessage</h2>
                    <p><a href="addQuestion.cshtml">Add another Question</a></p>
                </div>
            }
            else {
                <form method="post" id="Submit">
                    <div id="mydiv">
                        <h1>Add question</h1>
                        <hr>
                        <p>
                            Course:
                            <select id="categoryId" name="categoryId" onchange="updatelectures()" style="margin-left: 51px">
                                <option value="">-- Select course --</option>
                                @foreach(var category in selected) {
                                    if(Request.Form["categoryId"] == category.id.ToString()) {
                                        <option value="@category.id" selected>@category.course_name</option>
                                    }
                                    else {
                                        <option value="@category.id">@category.course_name</option>
                                    }
                                }
                            </select>
                            @Html.ValidationMessage("categoryId")
                        </p>
                        <p>
                            Lecture:
                            <select id="lectures" name="lectures" style="margin-left: 49px">
                                <option value="" disabled>-- Select lecture --</option>
                                @foreach(var matchinglectures in selectedlectures) {
                                    <option value="@matchinglectures.id">@matchinglectures.date</option>
                                }
                            </select>
                            @Html.ValidationMessage("lectures")
                        </p>
                        <p>Question: <input type="text" name="Question" size="16" style="margin-left: 38px" /> @Html.ValidationMessage("Question")</p>
                        <p>Tags (optional): <input type="text" name="Tags" size="16" /></p>
                        <p>Number of answers (max 10): <input type="button" name="addanswer" value="+" onclick="addform()" /> <input type="button" name="removeanswer" value="-" onclick="removeform()" /></p>
                        <p id="answerfield"></p>
                        <p><input type="hidden" id="counter" name="counter"/></p>
                        <p><input type="Submit" name="Submit" value="Submit" /></p>            
                        <p><a href="dashboard.cshtml">Back to dashboard</a></p>
                    </div>
                </form>
            }
        }
    </body>
</html>

@{
    if(db!=null) {
        db.Close();
    }
}