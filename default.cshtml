@using System.Text.RegularExpressions;
@{
    string u = Request.ServerVariables["HTTP_USER_AGENT"];
    Regex b = new Regex(@"(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino", RegexOptions.IgnoreCase | RegexOptions.Multiline);
    Regex v = new Regex(@"1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-", RegexOptions.IgnoreCase | RegexOptions.Multiline);
    
    var pageTitle = "See the questions!";
    var lecturename = "";

    var db = Database.Open("102547-concepttest");
}

<!DOCTYPE html>

<html lang="en">
    <head>
        <meta charset="utf-8" />
        @if ((b.IsMatch(u) || v.IsMatch(u.Substring(0, 4)))) {
            <link rel="stylesheet" type="text/css" href="StyleSheetMobile.css">
            <script src="~/fontsizescript.js" type="text/javascript"></script>
        }
        else {
            <link rel="stylesheet" type="text/css" href="StyleSheet.css">
        }
        <title>@pageTitle</title>
        <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    </head>
    <body onload="scaleWidth();" onresize="scaleWidth();">
        <div>
            
            @{
                if(Request.QueryString["course"] != null) {
                    var selectedData = db.QuerySingle("SELECT id, course_id, course_name FROM T_Course WHERE course_id = @0", Request.QueryString["course"]);
                    var selectedLecture = db.Query("SELECT id, date FROM T_Lecture WHERE course_id = @0", selectedData.id);
                    var grid = new WebGrid(source: selectedLecture, defaultSort: "id", rowsPerPage: 3);
                    <h2>@selectedData.course_id @selectedData.course_name</h2>
                    <p>Lectures:</p>
                    if(selectedLecture.Count < 1) {
                        <p><i>No lectures for selected course...</i></p>
                    }
                    else {
                        foreach(var lecture in selectedLecture) {
                            <p><a href="?lecture=@lecture.id">@lecture.date</a></p>
                        }
                    }
                    <hr>
                    <p><a href="~/">Back to front page</a></p>
                }
                else if(Request.QueryString["lecture"] != null) {
                    var passwordMessage = "";
                    if(IsPost) {
                        var selectedLecture = db.QuerySingle("SELECT password FROM T_Lecture WHERE id = @0", Request.QueryString["lecture"]);
                        if(Request.Form["password"] == selectedLecture.password) {
                            HttpCookie studentCookie = new HttpCookie("studentCookie");
                            studentCookie.Value = Request.QueryString["lecture"];
                            studentCookie.Expires = DateTime.Now.AddMinutes(5);
                            Response.Cookies.Add(studentCookie);
                            passwordMessage = "";
                            var address = "?lecture=" + Request.QueryString["lecture"];
                            Response.Redirect(address);
                        }
                        else {
                            passwordMessage = "Wrong password!";
                        }
                    }
                    if(Request.Cookies["studentCookie"] != null)
                    {
                        HttpCookie aCookie = Request.Cookies["studentCookie"];
                        lecturename = aCookie.Value.ToString();
                    }

                    if (HttpContext.Current.Request.Cookies["studentCookie"] == null || lecturename != Request.QueryString["lecture"]) {
                        <form method="post">
                        <p>Password: <input type="password" name="password" autofocus="true"> <input type="submit" value="Submit"> </p><p class="red">@passwordMessage</p>
                        </form>
                    }
                    
                    if(lecturename == Request.QueryString["lecture"]) {
                        var selectQuestionId = db.Query("SELECT question_id FROM T_Question_Lecture WHERE lecture_id = @0", Request.QueryString["lecture"]);
                        var selectQuestionCount = db.QueryValue("SELECT COUNT(*) FROM T_Question_Lecture WHERE lecture_id = @0", Request.QueryString["lecture"]);
                        var selectedQuestion = db.Query("SELECT T_Question.question, T_Question.id FROM T_Question "
                                                    + "INNER JOIN T_Question_Lecture ON T_Question.id = T_Question_Lecture.question_id "
                                                    + "WHERE T_Question_Lecture.lecture_id = @0 "
                                                    + "AND (SELECT COUNT(*) FROM T_Answer WHERE T_Answer.question_id = T_Question.id AND T_Answer.correct = 1) > 0", Request.QueryString["lecture"]);
                        var hasAnsweredAllQuestions = "";
                        if(selectQuestionCount > 0) {
                            <form method="post">

                            @{
                        
                                if(IsPost) {
                                    hasAnsweredAllQuestions = "1";
                                    foreach(var question in selectedQuestion) {
                                        var selectedAnswersRight = db.QueryValue("SELECT COUNT(*) FROM T_Answer WHERE question_id = @0 AND correct = 1", question.id);
                                        if(selectedAnswersRight == 1) {
                                            if(Request.Form["question-" + question.id] == null) {
                                                hasAnsweredAllQuestions = "0";
                                            }
                                        }
                                        else if(Request.Form["question-" + question.id] != null) {
                                            var answer = Request.Form["question-" + question.id];
                                            string[] answers = answer.Split(',');
                                            if(answers.Length != selectedAnswersRight) {
                                                hasAnsweredAllQuestions = "0";
                                            }
                                        }
                                        else {
                                            hasAnsweredAllQuestions = "0";
                                        }
                                        
                                    }
                                }
                        

                            if(hasAnsweredAllQuestions == "0") {
                                <h2>You have not entered valid answers!</h2>
                            }
                            }
                            @foreach(var question in selectedQuestion) {
                                <div>
                                @{var selectedAnswers = db.Query("SELECT * FROM T_Answer WHERE question_id = @0", question.id);
                                var selectedAnswersRight = db.QueryValue("SELECT COUNT(*) FROM T_Answer WHERE question_id = @0 AND correct = 1", question.id);
                                <p><b>@question.question</b></p>
                            
                                if(selectedAnswersRight == 1) {
                                    var selectedAnswer = "";
                                    if(Request.Form["question-" + question.id] != null) {
                                        selectedAnswer = Request.Form["question-" + question.id];
                                    }
                                    foreach(var answer in selectedAnswers) {
                                        if(selectedAnswer == answer.id.ToString()) {
                                            <p><input type="radio" name="question-@question.id" value="@answer.id" checked> @answer.answer</p>
                                        }
                                        else {
                                            <p><input type="radio" name="question-@question.id" value="@answer.id"> @answer.answer</p>
                                        }
                                    }
                                
                                    if(IsPost && hasAnsweredAllQuestions == "1" && Request.Cookies["studentCookie-" + Request.QueryString["lecture"]] == null) {
                                        try {
                                            var answer = Request.Form["question-" + question.id];
                                            <p>For question @question.id you answered: @answer</p>
                                            var insertCommand = "INSERT INTO T_Statistics (question_id, answer_id, lecture_id) VALUES(@0, @1, @2)";
                                            db.Execute(insertCommand, @question.id, answer, Request.QueryString["lecture"]);
                                        }
                                        catch (Exception e) {
                                            <p>Exception occured: @e</p>
                                        }
                                    
                                    }
                                }
                                else if(selectedAnswersRight > 1) {
                                    <p>(@selectedAnswersRight answers)</p>
                                    foreach(var answer in selectedAnswers) {
                                        <p><input type="checkbox" name="question-@question.id" value="@answer.id"> @answer.answer</p>
                                    }
                                    if(IsPost && hasAnsweredAllQuestions == "1" && Request.Cookies["studentCookie-" + Request.QueryString["lecture"]] == null) {
                                        var answer = Request.Form["question-" + question.id];
                                        if(answer != null) {
                                            string[] answers = answer.Split(',');
                                            <p>For question @question.id you answered: @answer</p>
                                            foreach(string word in answers) {
                                                try {
                                                    var insertCommand = "INSERT INTO T_Statistics (question_id, answer_id, lecture_id) VALUES(@0, @1, @2)";
                                                    db.Execute(insertCommand, @question.id, word, Request.QueryString["lecture"]);
                                                }
                                                catch (Exception e) {
                                                    <p>Exception occured: @e</p>
                                                }
                                            }
                                        }
                                    
                                    
                                    }
                                }}
                                </div>
                            }
                            @if(hasAnsweredAllQuestions == "1") {
                                HttpCookie studentCookie = new HttpCookie("studentCookie-" + Request.QueryString["lecture"]);
                                studentCookie.Values["lecture"] = Request.QueryString["lecture"];
                                studentCookie.Values["timeSubmitted"] = DateTime.Now.ToString();
                                studentCookie.Expires = DateTime.Now.AddMinutes(2);
                                Response.Cookies.Add(studentCookie);
                            }
                            @if(Request.Cookies["studentCookie-" + Request.QueryString["lecture"]] == null) {
                                <input type="submit" value="Answer">
                            }
                            else {
                                <input type="submit" value="You have already submitted your answers" disabled>
                                <p>You submitted your answers @Server.HtmlEncode(Request.Cookies["studentCookie-" + Request.QueryString["lecture"]]["timeSubmitted"])</p>
                            }
                        
                            
                            </form>
                        }
                        else {
                            <p><i>No questions here...</i></p>
                        }
                    }
                    <hr>
                    var getCourseID = db.QueryValue("SELECT T_Course.course_id FROM T_Course, T_Lecture WHERE T_Course.id = T_Lecture.course_id AND T_Lecture.id = @0", Request.QueryString["lecture"]);
                    <p><a href="?course=@getCourseID">Back to course @getCourseID</a></p>
                    <p><a href="~/">Back to front page</a></p>
                }
                else {
                    var selectedData = db.Query("SELECT course_id, course_name FROM T_Course");
                    <h1>Select a course</h1>
                    foreach(var course in selectedData) {
                        <p><a href="?course=@course.course_id">@course.course_id @course.course_name</a></p>
                    }
                    <hr>
                }
            }

            <a href="login.cshtml">Log in</a>
        </div>
    </body>
</html>

@{
    if(db!=null) {
        db.Close();
    }
}